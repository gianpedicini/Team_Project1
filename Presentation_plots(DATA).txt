Documento creato per annotare le query utilizzate nella presentazione del progetto SQL sul DB Northwind

-- Pagina 5 “ Fatturati registrati “

Fatturato 2016
SELECT 
	SUBSTR(o.OrderDate, 1, 4) AS anno, 
	SUM(od.UnitPrice * od.Quantity) AS FatturatoAnnuale
FROM Orders o 
JOIN "Order Details" od ON o.OrderID = od.OrderID 
WHERE anno = '2016' 
GROUP BY anno;

*** Per calcolare il fatturato degli anni 2017 e 2018 è necessario cambiare la condizione nella clausola where. ***

Per le considerazioni riportare nella slide circa le variazioni del fatturato registrati nei 3 anni sono state realizzate le seguenti query:

Per il confronto con il 2016:
SELECT 
	SUM(od.UnitPrice * od.Quantity) AS FatturatoParziale
FROM Orders o 
JOIN "Order Details" od ON o.OrderID = od.OrderID 
WHERE o.OrderDate >= '2017-07-04' AND o.OrderDate <= '2017-12-31';

Per il confronto con il 2018:
SELECT 
	SUM(od.UnitPrice * od.Quantity) AS FatturatoParziale
FROM Orders o 
JOIN "Order Details" od ON o.OrderID = od.OrderID 
WHERE o.OrderDate >= '2017-01-01' AND o.OrderDate <= '2017-05-06';

-- Pagina 6 " Fatturato triennale per paese"

SELECT 
       c.Country,
       ROUND(SUM(od.UnitPrice * od.Quantity)) AS CountrySalesAmountRounded
FROM "Order Details" od 
JOIN Orders o ON od.OrderID = o.OrderID 
JOIN Customers c ON c.CustomerID = o.CustomerID 
GROUP BY c.Country
ORDER BY CountrySalesAmountRounded DESC;

-- Pagina 7 " Uno sguardo ai prodotti "

Top 3 prodotti venduti in base al fatturato generato:
SELECT 
	p.ProductID, 
	p.ProductName, 
	p.CategoryID, 
	c.CategoryName, 
	SUM(od.Quantity * od.UnitPrice) AS revenue
FROM Products p 
JOIN "Order Details" od  ON p.ProductID = od.ProductID
JOIN Categories c ON p.CategoryID = c.CategoryID 
GROUP BY p.ProductID
ORDER BY revenue DESC 
LIMIT 3;

Top 3 categorie vendute in base al fatturato generato:
SELECT 
	p.CategoryID, 
	c.CategoryName, 
	SUM(od.Quantity * od.UnitPrice) AS revenue
FROM Products p 
JOIN "Order Details" od  ON p.ProductID = od.ProductID
JOIN Categories c ON p.CategoryID = c.CategoryID 
GROUP BY c.CategoryID 
ORDER BY revenue DESC 
LIMIT 3;

-- Pagina 8 " Produttività dei dipendenti "

WITH NumTerrTable AS
(SELECT 
	et.EmployeeID, 
	e.LastName, 
	e.FirstName, 
	e.Country,
	COUNT(TerritoryID) AS NumTerrResp
FROM EmployeeTerritories et 
JOIN Employees e ON et.EmployeeID = e.EmployeeID 
GROUP BY et.EmployeeID
),
EmployeePerformance AS
(SELECT 
	e.EmployeeID, 
	e.LastName, 
	e.FirstName,
	e.Country,
	ROUND(SUM(Quantity * UnitPrice)) AS SalesAmount
FROM Employees e 
JOIN Orders o ON e.EmployeeID = o.EmployeeID 
JOIN "Order Details" od ON o.OrderID = od.OrderID 
GROUP BY e.EmployeeID 
ORDER BY SalesAmount DESC
 )

SELECT 
	nt.EmployeeID, 
	nt.LastName, 
	nt.FirstName,
	nt.Country,
	nt.NumTerrResp, 
	ep.SalesAmount
FROM NumTerrTable nt
JOIN EmployeePerformance ep ON nt.EmployeeID = ep.EmployeeID
ORDER BY nt.NumTerrResp DESC;


-- Pagina 9 " Performance dipendenti in termini di fatturato "

SELECT 
	e.Country, 
	ROUND(SUM(od.Quantity*od.UnitPrice),2) as TotalSales
FROM Employees e
JOIN Orders o ON e.EmployeeID =o.EmployeeID 
JOIN "Order Details" od ON o.OrderID = od.OrderID 
GROUP BY e.Country 
ORDER BY TotalSales DESC;

-- Pagina 10 " Approfondimento sui dipendenti "

	Figure ( Title ) presenti in USA ma non presenti in UK
SELECT e.Title AS OnlyUSAtitles
FROM Employees e
WHERE e.Country = 'USA'
AND e.Title NOT IN 
(SELECT e2.Title FROM Employees e2 WHERE e2.Country = 'UK')

	Confronto età medie dipendenti USA vs UK
SELECT e.Country, AVG(DATETIME('now')  - e.BirthDate) AS AvgAge
FROM Employees e 
GROUP BY e.Country;

-- Pagina 11 " Report sugli ordini "

	RIFERIMENTO :  data ordine > data spedizione > data richiesta ( il prodotto deve essere consegnato )

	Data spedizione - Data Ordine = TimeToProcess ( tempo per evasione fisica dell'ordine )
	Data Richiesta - Data Ordine  = TimeToEvade ( dall'ordine alla data richiesta dal cliente )

WITH tt AS 
(select 
	c.CategoryID, 
	c.CategoryName, 
	o.ShipCountry, 
	JULIANDAY(RequiredDate)-JULIANDAY(OrderDate) as timeToEvade, 
	JULIANDAY(ShippedDate)-JULIANDAY(OrderDate) AS timeToProcess
FROM Orders o
JOIN "Order Details" od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
JOIN Categories c ON p.CategoryID = c.CategoryID
WHERE o.ShipCountry  IN (WITH country_revenues_table AS
(SELECT 
    o.ShipCountry , 
    SUM(od.UnitPrice * od.Quantity) AS country_revenue_triennale
 FROM "Order Details" od 
 	JOIN Orders o ON od.OrderID = o.OrderID 
 GROUP BY o.ShipCountry),
low_revenues_country_table AS 
(SELECT 
    crt.ShipCountry, 
    crt.country_revenue_triennale,
	CASE 
		WHEN country_revenue_triennale < (SELECT (MAX(country_revenue_triennale*0.20)) FROM country_revenues_table) THEN 'LOW'   -- se la revenue del paese è < TOT% MAX(revenue_triennale) -> LOW   -> TOT% = 20%MAX
	    WHEN country_revenue_triennale < (SELECT (MAX(country_revenue_triennale*0.50)) FROM country_revenues_table) THEN 'MEDIUM' --  se la revenue del paese è < TOT% MAX(revenue_triennale) -> MEDIUM -> TOT% = 50%MAX
	    ELSE 'HIGH'
	    END AS THRESHOLD
 FROM country_revenues_table crt
 WHERE THRESHOLD = 'LOW'
 ORDER BY country_revenue_triennale)
SELECT lrct.ShipCountry
FROM low_revenues_country_table lrct)
ORDER BY c.CategoryID)

SELECT 
	tt.CategoryID, 
	tt.CategoryName,
	tt.ShipCountry, 
	tt.timeToEvade, 
	tt.timeToProcess, 
CASE
	WHEN tt.timeToEvade > tt.timeToProcess THEN "On time"
	ELSE "Delayed"
END AS "Status"
from tt


-- Pagina 12 " Report sugli sconti "

	Effetto sconti paesi bassa vendita

SELECT 
	o.ShipCountry, 
	ROUND(SUM(od.UnitPrice * od.Quantity)) AS total_revenues_per_country,
	ROUND(SUM(od.UnitPrice * od.Quantity) - SUM(od.UnitPrice * od.Quantity * od.Discount)) AS total_revenues_per_country_with_discount
FROM Categories c 
	JOIN Products p ON c.CategoryID = p.CategoryID 
		JOIN "Order Details" od ON p.ProductID = od.ProductID 
			JOIN Orders o ON od.OrderID = o.OrderID 
WHERE o.ShipCountry IN
(WITH country_revenues_table AS
(SELECT 
    o.ShipCountry , 
    SUM(od.UnitPrice * od.Quantity) AS country_revenue_triennale
 FROM "Order Details" od 
 	JOIN Orders o ON od.OrderID = o.OrderID 
 GROUP BY o.ShipCountry),
low_revenues_country_table AS 
(SELECT 
    crt.ShipCountry, 
    crt.country_revenue_triennale,
	CASE 
		WHEN country_revenue_triennale < (SELECT (MAX(country_revenue_triennale*0.20)) FROM country_revenues_table) THEN 'LOW'   -- se la revenue del paese è < TOT% MAX(revenue_triennale) -> LOW   -> TOT% = 20%MAX
	    WHEN country_revenue_triennale < (SELECT (MAX(country_revenue_triennale*0.50)) FROM country_revenues_table) THEN 'MEDIUM' --  se la revenue del paese è < TOT% MAX(revenue_triennale) -> MEDIUM -> TOT% = 50%MAX
	    ELSE 'HIGH'
	    END AS THRESHOLD
 FROM country_revenues_table crt
 WHERE THRESHOLD = 'LOW'
 ORDER BY country_revenue_triennale)
SELECT lrct.ShipCountry
FROM low_revenues_country_table lrct)
GROUP BY o.ShipCountry


	Effetto sconti paesi ad alta vendita

SELECT 
	o.ShipCountry, 
	ROUND(SUM(od.UnitPrice * od.Quantity)) AS total_revenues_per_country,
	ROUND(SUM(od.UnitPrice * od.Quantity) - SUM(od.UnitPrice * od.Quantity * od.Discount)) AS total_revenues_per_country_with_discount
FROM Categories c 
	JOIN Products p ON c.CategoryID = p.CategoryID 
		JOIN "Order Details" od ON p.ProductID = od.ProductID 
			JOIN Orders o ON od.OrderID = o.OrderID 
WHERE o.ShipCountry IN
(WITH country_revenues_table AS
(SELECT 
    o.ShipCountry , 
    SUM(od.UnitPrice * od.Quantity) AS country_revenue_triennale
 FROM "Order Details" od 
 	JOIN Orders o ON od.OrderID = o.OrderID 
 GROUP BY o.ShipCountry),
low_revenues_country_table AS 
(SELECT 
    crt.ShipCountry, 
    crt.country_revenue_triennale,
	CASE 
		WHEN country_revenue_triennale < (SELECT (MAX(country_revenue_triennale*0.20)) FROM country_revenues_table) THEN 'LOW'   -- se la revenue del paese è < TOT% MAX(revenue_triennale) -> LOW   -> TOT% = 20%MAX
	    WHEN country_revenue_triennale < (SELECT (MAX(country_revenue_triennale*0.50)) FROM country_revenues_table) THEN 'MEDIUM' --  se la revenue del paese è < TOT% MAX(revenue_triennale) -> MEDIUM -> TOT% = 50%MAX
	    ELSE 'HIGH'
	    END AS THRESHOLD
 FROM country_revenues_table crt
 WHERE THRESHOLD = 'HIGH'
 ORDER BY country_revenue_triennale)
SELECT lrct.ShipCountry
FROM low_revenues_country_table lrct)
GROUP BY o.ShipCountry

I dati delle pagine 11 e 12 sono stati calcolati a partire dalle query qui riportate. È stato poi utilizzato Spreadsheet per ottenere le informazioni utilizzate infine nelle slides.